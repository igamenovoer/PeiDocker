#!/bin/bash

# install uv for all users, including root
# This script is designed for use in Docker builds (runs as root)
# Installs uv in each user's home directory with optional PyPI mirror configuration
# 
# Usage: ./install-uv-for-everyone.bash [--mirror=aliyun|tuna]
#   --mirror=aliyun  Use Aliyun PyPI mirror (https://mirrors.aliyun.com/pypi/simple/)
#   --mirror=tuna    Use Tsinghua PyPI mirror (https://pypi.tuna.tsinghua.edu.cn/simple/)

set -e

# Parse command line arguments
MIRROR=""
for arg in "$@"; do
    case $arg in
        --mirror=aliyun)
            MIRROR="aliyun"
            ;;
        --mirror=tuna)
            MIRROR="tuna"
            ;;
        --mirror=*)
            echo "Error: Unknown mirror option. Use --mirror=aliyun or --mirror=tuna"
            exit 1
            ;;
        *)
            echo "Error: Unknown argument $arg"
            echo "Usage: $0 [--mirror=aliyun|tuna]"
            exit 1
            ;;
    esac
done

# Set mirror URL based on option
if [ "$MIRROR" = "aliyun" ]; then
    MIRROR_URL="https://mirrors.aliyun.com/pypi/simple/"
    echo "Using Aliyun PyPI mirror: $MIRROR_URL"
elif [ "$MIRROR" = "tuna" ]; then
    MIRROR_URL="https://pypi.tuna.tsinghua.edu.cn/simple/"
    echo "Using Tsinghua PyPI mirror: $MIRROR_URL"
else
    echo "Using default PyPI repository"
fi

# Function to create uv configuration file for a user
create_uv_config() {
    local user_home="$1"
    local config_dir="$user_home/.config/uv"
    local config_file="$config_dir/uv.toml"
    
    if [ -n "$MIRROR_URL" ]; then
        echo "Creating uv configuration with mirror at: $config_file"
        
        # Create config directory
        mkdir -p "$config_dir"
        
        # Create uv.toml with mirror configuration
        cat > "$config_file" << EOF
# uv configuration file
# Generated by install-uv-for-everyone.bash

[[index]]
url = "$MIRROR_URL"
default = true

[pip]
index-url = "$MIRROR_URL"
EOF
        
        # Set proper ownership if not root's home
        if [ "$user_home" != "/root" ]; then
            local username=$(basename "$user_home")
            if id "$username" &>/dev/null; then
                chown -R "$username:$username" "$config_dir"
            fi
        fi
        
        echo "✓ uv configuration created at $config_file"
    fi
}

# Function to install uv for a specific user
install_uv_for_user() {
    local username="$1"
    local user_home="$2"
    
    echo "Installing uv for user: $username (home: $user_home)"
    
    # Skip if home directory doesn't exist
    if [ ! -d "$user_home" ]; then
        echo "Skipping $username: home directory $user_home does not exist"
        return
    fi
    
    # Skip system users with non-standard shells or restricted accounts
    if getent passwd "$username" | grep -E '/(nologin|false|sync|shutdown|halt)$' > /dev/null; then
        echo "Skipping system user: $username"
        return
    fi
    
    # Install uv as the specific user (no password needed since we're root)
    if [ "$username" = "root" ]; then
        # Install for root directly
        export HOME="$user_home"
        wget -qO- https://astral.sh/uv/install.sh | sh
        echo "uv installed for root at $user_home/.local/bin/uv"
    else
        # Install for non-root user using runuser (no password required)
        runuser -l "$username" -c 'wget -qO- https://astral.sh/uv/install.sh | sh'
        echo "uv installed for $username at $user_home/.local/bin/uv"
    fi
    
    # Create uv configuration file if mirror is specified
    create_uv_config "$user_home"
    
    # Verify installation
    if [ -f "$user_home/.local/bin/uv" ]; then
        echo "✓ uv successfully installed for $username"
    else
        echo "✗ uv installation failed for $username"
    fi
}

echo "Installing uv for all users..."

# Get all users with actual home directories and valid shells
# This includes root and regular users but excludes system service accounts
while IFS=: read -r username _ uid gid _ home_dir shell; do
    # Skip users with UID < 1000 except root (UID 0)
    if [ "$uid" -lt 1000 ] && [ "$uid" -ne 0 ]; then
        continue
    fi
    
    install_uv_for_user "$username" "$home_dir"
    
done < /etc/passwd

echo "uv installation completed for all applicable users."