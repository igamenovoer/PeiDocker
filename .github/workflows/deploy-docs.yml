name: Deploy Documentation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write
  actions: read

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Install dependencies
        run: |
          pip install mkdocs
          pip install mkdocs-material
          pip install mkdocs-glightbox
          pip install mkdocs-autorefs
          pip install pymdown-extensions
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Build with MkDocs
        run: |
          echo "Building MkDocs site..."
          mkdocs build --clean --verbose
          # Ensure .nojekyll is in the site directory
          touch site/.nojekyll
          # Also add a CNAME file if needed for custom domain (optional)
          # echo "yourdomain.com" > site/CNAME
          echo "Site contents:"
          ls -la site/
          echo "Checking for required files:"
          test -f site/index.html && echo "✓ index.html exists" || echo "✗ index.html missing"
          test -f site/cli_reference/index.html && echo "✓ cli_reference/index.html exists" || echo "✗ cli_reference/index.html missing"
          test -f site/examples/index.html && echo "✓ examples/index.html exists" || echo "✗ examples/index.html missing"
          test -f site/.nojekyll && echo "✓ .nojekyll exists" || echo "✗ .nojekyll missing"
          echo "Index.html content preview:"
          head -20 site/index.html
          echo "Checking Material theme assets:"
          ls -la site/assets/stylesheets/ | head -5 || echo "No stylesheets found"
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site

  # Deploy job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 